<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.white.mapper.ArticleMapper">

    <insert id="saveOrUpdateConArticleTag" useGeneratedKeys="true">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(*) from con_article_tag where ARTICLE_ID=#{articleId}
        </selectKey>
        <if test="count>0">
            <foreach collection="tagIdList" separator=";" item="item">
                insert into con_article_tag ( ARTICLE_ID, TAG_ID )
                select #{articleId},#{item}
                from dual
                where
                not exists (
                    select *
                    from con_article_tag a
                    where
                        a.ARTICLE_ID = #{articleId} and
                        a.TAG_ID = #{item}
                )
            </foreach>
        </if>
        <if test="count==0">
            insert
            con_article_tag(ARTICLE_ID,TAG_ID)
            values
            <foreach collection="tagIdList" separator="," item="item">
                (#{articleId},#{item})
            </foreach>
        </if>
    </insert>



    <delete id="deleteArticleById">
        delete tb_article, con_article_tag
        from tb_article
        inner join con_article_tag on tb_article.ID = con_article_tag.ARTICLE_ID
        where tb_article.ID = #{articleId}
    </delete>


    <select id="listArticlePage" resultType="com.white.dto.ArticleListDTO">
        select
        a.ID as articleId,
        a.TITLE as articleTitle,
        b.ID as categoryId,
        a.CREATE_TIME as createTime,
        a.UPDATE_TIME as updateTime,
        a.IS_TOP as isTop
        from tb_article a, tb_category b
        where

        a.CATEGORY_ID = b.ID
        <if test="articleTitle != null and articleTitle != '' ">
            and a.TITLE like concat(concat('%',#{articleTitle}),'%')
        </if>
        limit #{sqlQueryNumber},#{pageSize}
    </select>


    <!--上述代码存在bug，sqlQueryNumber=pageSize=2时，会报错
    <resultMap id="ArticleListPageMap" type="com.white.dto.ArticleListDTO">
        <result column="ID" property="articleId"></result>
        <result column="TITLE" property="articleTitle"></result>
        <result column="CATEGORY" property="category"></result>
        <result column="CREATE_TIME" property="createTime"></result>
        <result column="UPDATE_TIME" property="updateTime"></result>
        <collection property="tagList" ofType="string">
            <result column="TAG_NAME"></result>
        </collection>
    </resultMap>
    c.`TAG_NAME`,
    a.ID = d.ARTICLE_ID and
    , tb_tag c, con_article_tag d
    and
        c.ID = d.TAG_ID

    -->
    <resultMap id="homePageArticlesMap" type="com.white.dto.ArticleDTO">
        <!--column数据表的列名或者标签别名  property需要映射到JavaBean 的属性名称-->
        <result column="articleId" property="articleId"></result>
        <result column="articleTitle" property="articleTitle"></result>
        <result column="picture" property="picture"></result>
        <result column="content" property="content"></result>

        <result column="createTime" property="createTime"></result>
        <result column="updateTime" property="updateTime"></result>
        <result column="isTop" property="isTop" javaType="boolean"></result>
        <association property="category" javaType="com.white.entity.Category">
            <result column="categoryId" property="id"></result>
            <result column="category" property="category"></result>
        </association>
        <collection property="tagList" ofType="com.white.entity.Tag">
            <result column="tagId" property="id"></result>
            <result column="TAG_NAME" property="tagName"></result>
        </collection>
    </resultMap>
    <select id="homePageArticles" resultMap="homePageArticlesMap">
        select
        a.ID as articleId,
        a.TITLE as articleTitle,
        a.PICTURE as picture,
        a.CONTENT as content,
        c.ID as categoryId,
        c.CATEGORY as category,
        a.CREATE_TIME as createTime,
        a.UPDATE_TIME as updateTime,
        a.IS_TOP as isTop,
        b.ID as tagId,
        b.`TAG_NAME`
        from tb_article a,tb_tag b, tb_category c, con_article_tag d
        where a.CATEGORY_ID = c.ID and
        b.ID = d.TAG_ID and
        a.ID = d.ARTICLE_ID
        order by a.UPDATE_TIME desc
        limit #{sqlQueryNumber},10
    </select>

    <select id="isExistArticleId" resultType="java.lang.Integer">
        select
        count(a.ARTICLE_ID)
        from con_article_tag a
        where a.ARTICLE_ID=#{articleId}
    </select>

    <insert id="updateConArticleTag">
        insert ignore into
        con_article_tag(ARTICLE_ID,TAG_ID)
        values
        <foreach collection="tagIdList" separator="," item="item">
            (#{articleId},#{item})
        </foreach>
    </insert>
    <insert id="insertConArticleTag">
        insert
        con_article_tag(ARTICLE_ID,TAG_ID)
        values
        <foreach collection="tagIdList" separator="," item="item">
            (#{articleId},#{item})
        </foreach>
    </insert>


    <!--    <select id="getArticleById" resultType="com.white.entity.Article">-->
<!--        select-->
<!--        a.ID,-->
<!--        a.TITLE,-->
<!--        a.PICTURE,-->
<!--        a.CATEGORY_ID,-->
<!--        a.CONTENT,-->
<!--        a.CREATE_TIME,-->
<!--        a.UPDATE_TIME,-->
<!--        a.IS_TOP,-->
<!--        a.IS_DRAFT-->
<!--        from tb_article a-->
<!--        where a.ID = #{articleId}-->
<!--    </select>-->

</mapper>
